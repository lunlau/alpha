//指定proto3语法

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: alphas.proto

//包名

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 定义发送请求信息
type AddRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules string `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *AddRuleRequest) Reset() {
	*x = AddRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alphas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleRequest) ProtoMessage() {}

func (x *AddRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alphas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleRequest.ProtoReflect.Descriptor instead.
func (*AddRuleRequest) Descriptor() ([]byte, []int) {
	return file_alphas_proto_rawDescGZIP(), []int{0}
}

func (x *AddRuleRequest) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

// 定义响应信息
type AddRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules string `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *AddRuleResponse) Reset() {
	*x = AddRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alphas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleResponse) ProtoMessage() {}

func (x *AddRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alphas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleResponse.ProtoReflect.Descriptor instead.
func (*AddRuleResponse) Descriptor() ([]byte, []int) {
	return file_alphas_proto_rawDescGZIP(), []int{1}
}

func (x *AddRuleResponse) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

// 定义发送请求信息
type BuildReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules string `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *BuildReportRequest) Reset() {
	*x = BuildReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alphas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildReportRequest) ProtoMessage() {}

func (x *BuildReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alphas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildReportRequest.ProtoReflect.Descriptor instead.
func (*BuildReportRequest) Descriptor() ([]byte, []int) {
	return file_alphas_proto_rawDescGZIP(), []int{2}
}

func (x *BuildReportRequest) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

// 定义响应信息
type BuildReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules string `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *BuildReportResponse) Reset() {
	*x = BuildReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alphas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildReportResponse) ProtoMessage() {}

func (x *BuildReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alphas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildReportResponse.ProtoReflect.Descriptor instead.
func (*BuildReportResponse) Descriptor() ([]byte, []int) {
	return file_alphas_proto_rawDescGZIP(), []int{3}
}

func (x *BuildReportResponse) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

var File_alphas_proto protoreflect.FileDescriptor

var file_alphas_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x26, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0x2b, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x32, 0x89, 0x01, 0x0a,
	0x0f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alphas_proto_rawDescOnce sync.Once
	file_alphas_proto_rawDescData = file_alphas_proto_rawDesc
)

func file_alphas_proto_rawDescGZIP() []byte {
	file_alphas_proto_rawDescOnce.Do(func() {
		file_alphas_proto_rawDescData = protoimpl.X.CompressGZIP(file_alphas_proto_rawDescData)
	})
	return file_alphas_proto_rawDescData
}

var file_alphas_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_alphas_proto_goTypes = []interface{}{
	(*AddRuleRequest)(nil),      // 0: pb.AddRuleRequest
	(*AddRuleResponse)(nil),     // 1: pb.AddRuleResponse
	(*BuildReportRequest)(nil),  // 2: pb.BuildReportRequest
	(*BuildReportResponse)(nil), // 3: pb.BuildReportResponse
}
var file_alphas_proto_depIdxs = []int32{
	0, // 0: pb.AlphaRuleEngine.AddRule:input_type -> pb.AddRuleRequest
	2, // 1: pb.AlphaRuleEngine.BuildReport:input_type -> pb.BuildReportRequest
	1, // 2: pb.AlphaRuleEngine.AddRule:output_type -> pb.AddRuleResponse
	3, // 3: pb.AlphaRuleEngine.BuildReport:output_type -> pb.BuildReportResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_alphas_proto_init() }
func file_alphas_proto_init() {
	if File_alphas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_alphas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alphas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alphas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alphas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alphas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alphas_proto_goTypes,
		DependencyIndexes: file_alphas_proto_depIdxs,
		MessageInfos:      file_alphas_proto_msgTypes,
	}.Build()
	File_alphas_proto = out.File
	file_alphas_proto_rawDesc = nil
	file_alphas_proto_goTypes = nil
	file_alphas_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlphaRuleEngineClient is the client API for AlphaRuleEngine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlphaRuleEngineClient interface {
	AddRule(ctx context.Context, in *AddRuleRequest, opts ...grpc.CallOption) (*AddRuleResponse, error)
	BuildReport(ctx context.Context, in *BuildReportRequest, opts ...grpc.CallOption) (*BuildReportResponse, error)
}

type alphaRuleEngineClient struct {
	cc grpc.ClientConnInterface
}

func NewAlphaRuleEngineClient(cc grpc.ClientConnInterface) AlphaRuleEngineClient {
	return &alphaRuleEngineClient{cc}
}

func (c *alphaRuleEngineClient) AddRule(ctx context.Context, in *AddRuleRequest, opts ...grpc.CallOption) (*AddRuleResponse, error) {
	out := new(AddRuleResponse)
	err := c.cc.Invoke(ctx, "/pb.AlphaRuleEngine/AddRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alphaRuleEngineClient) BuildReport(ctx context.Context, in *BuildReportRequest, opts ...grpc.CallOption) (*BuildReportResponse, error) {
	out := new(BuildReportResponse)
	err := c.cc.Invoke(ctx, "/pb.AlphaRuleEngine/BuildReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlphaRuleEngineServer is the server API for AlphaRuleEngine service.
type AlphaRuleEngineServer interface {
	AddRule(context.Context, *AddRuleRequest) (*AddRuleResponse, error)
	BuildReport(context.Context, *BuildReportRequest) (*BuildReportResponse, error)
}

// UnimplementedAlphaRuleEngineServer can be embedded to have forward compatible implementations.
type UnimplementedAlphaRuleEngineServer struct {
}

func (*UnimplementedAlphaRuleEngineServer) AddRule(context.Context, *AddRuleRequest) (*AddRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRule not implemented")
}
func (*UnimplementedAlphaRuleEngineServer) BuildReport(context.Context, *BuildReportRequest) (*BuildReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildReport not implemented")
}

func RegisterAlphaRuleEngineServer(s *grpc.Server, srv AlphaRuleEngineServer) {
	s.RegisterService(&_AlphaRuleEngine_serviceDesc, srv)
}

func _AlphaRuleEngine_AddRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlphaRuleEngineServer).AddRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlphaRuleEngine/AddRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlphaRuleEngineServer).AddRule(ctx, req.(*AddRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlphaRuleEngine_BuildReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlphaRuleEngineServer).BuildReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlphaRuleEngine/BuildReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlphaRuleEngineServer).BuildReport(ctx, req.(*BuildReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlphaRuleEngine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AlphaRuleEngine",
	HandlerType: (*AlphaRuleEngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRule",
			Handler:    _AlphaRuleEngine_AddRule_Handler,
		},
		{
			MethodName: "BuildReport",
			Handler:    _AlphaRuleEngine_BuildReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alphas.proto",
}
